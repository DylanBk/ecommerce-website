{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DBull\\\\OneDrive\\\\Documents\\\\JavaScript Projects\\\\My App\\\\frontend\\\\src\\\\utils\\\\privateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { useAuth } from './AuthProvider'; // Ensure the path matches where you've saved your AuthProvider\n\n// Create a PrivateRoute component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Element,\n  requiredRole,\n  ...rest\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth(); // Get the user object from the useAuth hook\n\n  // Check if user is authenticated and has the required role\n  if (user && user.role === requiredRole) {\n    return /*#__PURE__*/_jsxDEV(Element, {\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(PrivateRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","element","Element","requiredRole","rest","_s","user","role","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/DBull/OneDrive/Documents/JavaScript Projects/My App/frontend/src/utils/privateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { useAuth } from './AuthProvider'; // Ensure the path matches where you've saved your AuthProvider\r\n\r\n// Create a PrivateRoute component\r\nconst PrivateRoute = ({ element: Element, requiredRole, ...rest }) => {\r\n  const { user } = useAuth(); // Get the user object from the useAuth hook\r\n\r\n  // Check if user is authenticated and has the required role\r\n  if (user && user.role === requiredRole) {\r\n    return <Element {...rest} />;\r\n  } else {\r\n    return <Navigate to=\"/unauthorized\" />;\r\n  }\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,gBAAgB,CAAC,CAAC;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAEC,YAAY;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM;IAAEC;EAAK,CAAC,GAAGT,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE5B;EACA,IAAIS,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,YAAY,EAAE;IACtC,oBAAOJ,OAAA,CAACG,OAAO;MAAA,GAAKE;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9B,CAAC,MAAM;IACL,oBAAOZ,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAC;IAAe;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxC;AACF,CAAC;AAACN,EAAA,CATIL,YAAY;EAAA,QACCH,OAAO;AAAA;AAAAgB,EAAA,GADpBb,YAAY;AAWlB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}